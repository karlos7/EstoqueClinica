/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package estocmed.telas;

import estocmed.estoqueconsumo.EstoqueConsumo;
import estocmed.estoqueconsumo.EstoqueConsumoDAO;
import estocmed.estoqueconsumo.EstoqueConsumoSaidaTableModel;
import estocmed.estoqueconsumo.EstoqueConsumoTableModel;
import estocmed.produtoconsumo.ProdutoConsumo;
import estocmed.produtoconsumo.ProdutoConsumoDAO;
import estocmed.saidaconsumo.SaidaConsumo;
import estocmed.saidaconsumo.SaidaConsumoDAO;
import estocmed.saidaconsumo.SaidaConsumoTableModel;
import estocmed.usuario.Usuario;
import estocmed.util.Util;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Adriano Lima
 */
public class CadastroDevolucaoConsumo extends javax.swing.JDialog {

    EstoqueConsumo estoque = new EstoqueConsumo();
    EstoqueConsumoDAO estoqueDAO;
    ProdutoConsumo produto = new ProdutoConsumo();
    ProdutoConsumoDAO produtoDAO;
    Usuario usuario;

    SaidaConsumoDAO saidaDAO;
    SaidaConsumo saidaEstoque = new SaidaConsumo();
    int qtd;
    private static Object objeto;
    SimpleDateFormat formatarData = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form TelaCadastroUsuario
     *
     * @param usuario
     */
    public CadastroDevolucaoConsumo(java.awt.Frame parent, boolean modal, Usuario usuario) {
        initComponents();
        estoqueDAO = new EstoqueConsumoDAO(this.usuario);
        this.usuario = usuario;
        produtoDAO = new ProdutoConsumoDAO(this.usuario);
        saidaDAO = new SaidaConsumoDAO(this.usuario);
        tabelaSaida();
        txProduto.setEnabled(false);
        setModal(true);
    }
    Date date = new Date();
    SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy - hh:mm");

    public void tabelaSaida() {
        EstoqueConsumoSaidaTableModel tbl = new EstoqueConsumoSaidaTableModel(saidaEstoque.getEstoqueConsumo());
        tbSaida.setModel(tbl);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoDestino = new javax.swing.ButtonGroup();
        jLObrigatorioNome1 = new javax.swing.JLabel();
        jlSaida = new javax.swing.JLabel();
        jlDestino1 = new javax.swing.JLabel();
        txProduto = new javax.swing.JTextField();
        btnProduto1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSaida = new javax.swing.JTable();
        btDevolver = new javax.swing.JButton();
        btVoltar1 = new javax.swing.JButton();
        btSalvar1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(720, 421));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(null);

        jLObrigatorioNome1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLObrigatorioNome1.setForeground(new java.awt.Color(204, 0, 0));
        jLObrigatorioNome1.setText("*");
        getContentPane().add(jLObrigatorioNome1);
        jLObrigatorioNome1.setBounds(560, 90, 10, 10);

        jlSaida.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jlSaida.setText("Saídas");
        getContentPane().add(jlSaida);
        jlSaida.setBounds(340, 130, 60, 30);

        jlDestino1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jlDestino1.setText("Destino:");
        getContentPane().add(jlDestino1);
        jlDestino1.setBounds(110, 90, 70, 30);

        txProduto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txProduto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(100, 44, 143), 1, true));
        txProduto.setMaximumSize(new java.awt.Dimension(8, 200));
        txProduto.setMinimumSize(new java.awt.Dimension(8, 200));
        txProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txProdutoActionPerformed(evt);
            }
        });
        getContentPane().add(txProduto);
        txProduto.setBounds(180, 90, 380, 30);

        btnProduto1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnProduto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/birdpoint/imagens/add20-20.png"))); // NOI18N
        btnProduto1.setContentAreaFilled(false);
        btnProduto1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnProduto1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnProduto1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnProduto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProduto1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnProduto1);
        btnProduto1.setBounds(570, 90, 30, 30);

        tbSaida.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tbSaida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbSaida);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 160, 660, 170);

        btDevolver.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btDevolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/birdpoint/imagens/estornar.png"))); // NOI18N
        btDevolver.setText("Devolver");
        btDevolver.setContentAreaFilled(false);
        btDevolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btDevolver.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btDevolver.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDevolverActionPerformed(evt);
            }
        });
        getContentPane().add(btDevolver);
        btDevolver.setBounds(320, 340, 100, 70);

        btVoltar1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btVoltar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/birdpoint/imagens/voltar.png"))); // NOI18N
        btVoltar1.setText("Voltar");
        btVoltar1.setContentAreaFilled(false);
        btVoltar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVoltar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btVoltar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btVoltar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltar1ActionPerformed(evt);
            }
        });
        getContentPane().add(btVoltar1);
        btVoltar1.setBounds(30, 340, 90, 70);

        btSalvar1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btSalvar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/birdpoint/imagens/SalvarM.png"))); // NOI18N
        btSalvar1.setText("Salvar");
        btSalvar1.setContentAreaFilled(false);
        btSalvar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSalvar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvar1ActionPerformed(evt);
            }
        });
        getContentPane().add(btSalvar1);
        btSalvar1.setBounds(610, 340, 80, 70);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/birdpoint/imagens/devolucaoConsumo.png"))); // NOI18N
        jLabel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel6.setMaximumSize(new java.awt.Dimension(720, 423));
        jLabel6.setMinimumSize(new java.awt.Dimension(720, 423));
        jLabel6.setPreferredSize(new java.awt.Dimension(720, 423));
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 720, 420);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txProdutoActionPerformed

    private void btnProduto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProduto1ActionPerformed
        List<SaidaConsumo> lista;
        lista = (saidaDAO.listarRelatorio());
        SaidaConsumoTableModel itm = new SaidaConsumoTableModel(lista);
        Object objetoRetorno = PesquisaGenerica.exibeTela(itm, "Saída");
        if (objetoRetorno != null) {
            saidaEstoque = saidaDAO.consultarObjetoId("idSaida", objetoRetorno);
            txProduto.setEnabled(false);
            txProduto.setText(String.valueOf(saidaEstoque.getIdSaida() + " / " + saidaEstoque.getDestino().getNomeDestino()));
            tabelaSaida();
        }
    }//GEN-LAST:event_btnProduto1ActionPerformed

    private boolean verificaQuantidadeEstoque(int qtdAtual) {
        if (estoque.getQtdEstoque() >= qtdAtual) {
            return true;
        }
        JOptionPane.showMessageDialog(this, "Não foi possível realizar essa saída. A Quantidade não está disponível!\n"
                + "Nome produto: " + estoque.getProduto().getNomeProdutoConsumo()
                + "\nQuantidade em estoque: " + (estoque.getQtdEstoque() - qtdAtual));
        return false;
    }

    private int capturarLinhaSelecionada() {
        int row = tbSaida.getSelectedRow();
        if (row > -1) {
            return row;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione o Ítem!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
            return -1;
        }
    }

    private int quantidadeSaida(int index) {
        int quant = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Quantidade de itens para devolver.\n\n"
                + "Nome produto: " + saidaEstoque.getEstoqueConsumo().get(index).getProduto().getNomeProdutoConsumo() + "\n"
                + "Quantidade disponível: " + saidaEstoque.getEstoqueConsumo().get(index).getQtdSaida()));

        if (quant > saidaEstoque.getEstoqueConsumo().get(index).getQtdSaida()) {
            JOptionPane.showMessageDialog(rootPane, "Quantidade maior que a disponível!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
            quant = -1;
        }

        return quant;
    }

    private void btDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDevolverActionPerformed
        if (capturarLinhaSelecionada() != -1) {
            int quant = quantidadeSaida(capturarLinhaSelecionada());
            if (quant != -1) {
                saidaEstoque.getEstoqueConsumo().get(capturarLinhaSelecionada()).setQtdSaida(saidaEstoque.getEstoqueConsumo().get(capturarLinhaSelecionada()).getQtdSaida() - quant);
                saidaEstoque.getEstoqueConsumo().get(capturarLinhaSelecionada()).setQtdEstoque(saidaEstoque.getEstoqueConsumo().get(capturarLinhaSelecionada()).getQtdEstoque() + quant);
                tabelaSaida();
            }
        }

    }//GEN-LAST:event_btDevolverActionPerformed

    private void btVoltar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltar1ActionPerformed
        dispose();
    }//GEN-LAST:event_btVoltar1ActionPerformed

    private void limparCampos() {
        Util.limparCamposGenerico(this);
        estoque = new EstoqueConsumo();
        saidaEstoque = new SaidaConsumo();
        tabelaSaida();
    }

    private void btSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvar1ActionPerformed
        if (saidaEstoque.getIdSaida() != 0) {
            saidaDAO.atualizar(saidaEstoque);
            JOptionPane.showMessageDialog(null, "Devolução realizada com sucesso!");
        } else {
            JOptionPane.showMessageDialog(this, "Não é possivel fazer a retirada. Selecione uma saída.");
        }
        limparCampos();
    }//GEN-LAST:event_btSalvar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroDevolucaoConsumo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroDevolucaoConsumo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroDevolucaoConsumo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroDevolucaoConsumo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CadastroDevolucaoConsumo dialog = new CadastroDevolucaoConsumo(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDevolver;
    private javax.swing.JButton btSalvar1;
    private javax.swing.JButton btVoltar1;
    private javax.swing.JButton btnProduto1;
    private javax.swing.ButtonGroup grupoDestino;
    private javax.swing.JLabel jLObrigatorioNome1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlDestino1;
    private javax.swing.JLabel jlSaida;
    private javax.swing.JTable tbSaida;
    private javax.swing.JTextField txProduto;
    // End of variables declaration//GEN-END:variables
}
